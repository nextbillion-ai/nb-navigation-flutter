name: Nextbillion Navigation Flutter CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.0"

      - name: Install dependencies
        run: flutter pub get

      - name: Run analyzer
        run: flutter analyze lib

      - name: Run tests with coverage
        run: |
          flutter test --coverage          

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: coverage/lcov.info
          flags: unittests
          name: codecov-report
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  drive_android:
    # The type of machine to run the job on.
    runs-on: macos-latest
    # creates a build matrix for your jobs
    strategy:
      # set of different configurations of the virtual environment.
      matrix:
        api-level: [ 33 ]
        target: [ google_apis ]
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "oracle"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable' # or: 'dev' or 'beta'
          architecture: x64
      - name: "Run Flutter Driver tests"
        # GitHub Action for installing, configuring and running Android Emulators (work only Mac OS)
        # https://github.com/marketplace/actions/android-emulator-runner
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
        run: |
          cd ..
          cd ..
          cd example/
          flutter pub get
          flutter pub get
          flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart


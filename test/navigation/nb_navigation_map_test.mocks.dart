// Mocks generated by Mockito 5.4.4 from annotations
// in nb_navigation_flutter/test/navigation/nb_navigation_map_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:math' as _i7;
import 'dart:typed_data' as _i9;
import 'dart:ui' as _i8;

import 'package:flutter/painting.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:nb_maps_flutter/nb_maps_flutter.dart' as _i4;
import 'package:nb_navigation_flutter/navigation/nb_map_controller_wrapper.dart'
    as _i3;
import 'package:nb_navigation_flutter/nb_navigation_flutter.dart' as _i2;
import 'package:nb_navigation_flutter/util/asset_manager.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDirectionsRouteResponse_0 extends _i1.SmartFake
    implements _i2.DirectionsRouteResponse {
  _FakeDirectionsRouteResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MapController].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapController extends _i1.Mock implements _i3.MapController {
  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i4.OnFeatureInteractionCallback> get onFeatureTapped =>
      (super.noSuchMethod(
        Invocation.getter(#onFeatureTapped),
        returnValue: <_i4.OnFeatureInteractionCallback>[],
        returnValueForMissingStub: <_i4.OnFeatureInteractionCallback>[],
      ) as List<_i4.OnFeatureInteractionCallback>);

  @override
  void resizeWebMap() => super.noSuchMethod(
        Invocation.method(
          #resizeWebMap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void forceResizeWebMap() => super.noSuchMethod(
        Invocation.method(
          #forceResizeWebMap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<bool?> animateCamera(
    _i4.CameraUpdate? cameraUpdate, {
    Duration? duration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #animateCamera,
          [cameraUpdate],
          {#duration: duration},
        ),
        returnValue: _i5.Future<bool?>.value(),
        returnValueForMissingStub: _i5.Future<bool?>.value(),
      ) as _i5.Future<bool?>);

  @override
  _i5.Future<bool?> moveCamera(_i4.CameraUpdate? cameraUpdate) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveCamera,
          [cameraUpdate],
        ),
        returnValue: _i5.Future<bool?>.value(),
        returnValueForMissingStub: _i5.Future<bool?>.value(),
      ) as _i5.Future<bool?>);

  @override
  _i5.Future<void> addGeoJsonSource(
    String? sourceId,
    Map<String, dynamic>? geojson, {
    String? promoteId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGeoJsonSource,
          [
            sourceId,
            geojson,
          ],
          {#promoteId: promoteId},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setGeoJsonSource(
    String? sourceId,
    Map<String, dynamic>? geojson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGeoJsonSource,
          [
            sourceId,
            geojson,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setGeoJsonFeature(
    String? sourceId,
    Map<String, dynamic>? geojsonFeature,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGeoJsonFeature,
          [
            sourceId,
            geojsonFeature,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addSymbolLayer(
    String? sourceId,
    String? layerId,
    _i4.SymbolLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbolLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addLineLayer(
    String? sourceId,
    String? layerId,
    _i4.LineLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLineLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addFillLayer(
    String? sourceId,
    String? layerId,
    _i4.FillLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFillLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addFillExtrusionLayer(
    String? sourceId,
    String? layerId,
    _i4.FillExtrusionLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFillExtrusionLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addCircleLayer(
    String? sourceId,
    String? layerId,
    _i4.CircleLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircleLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addRasterLayer(
    String? sourceId,
    String? layerId,
    _i4.RasterLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRasterLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addHillshadeLayer(
    String? sourceId,
    String? layerId,
    _i4.HillshadeLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHillshadeLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addHeatmapLayer(
    String? sourceId,
    String? layerId,
    _i4.HeatmapLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHeatmapLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateMyLocationTrackingMode(
          _i4.MyLocationTrackingMode? myLocationTrackingMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMyLocationTrackingMode,
          [myLocationTrackingMode],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> matchMapLanguageWithDeviceDefault() => (super.noSuchMethod(
        Invocation.method(
          #matchMapLanguageWithDeviceDefault,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateContentInsets(
    _i6.EdgeInsets? insets, [
    bool? animated = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContentInsets,
          [
            insets,
            animated,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setMapLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setMapLanguage,
          [language],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setTelemetryEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setTelemetryEnabled,
          [enabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> getTelemetryEnabled() => (super.noSuchMethod(
        Invocation.method(
          #getTelemetryEnabled,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i4.Symbol?> addSymbol(
    _i4.SymbolOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbol,
          [
            options,
            data,
          ],
        ),
        returnValue: _i5.Future<_i4.Symbol?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.Symbol?>.value(),
      ) as _i5.Future<_i4.Symbol?>);

  @override
  _i5.Future<List<_i4.Symbol>?> addSymbols(
    List<_i4.SymbolOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbols,
          [
            options,
            data,
          ],
        ),
        returnValue: _i5.Future<List<_i4.Symbol>?>.value(),
        returnValueForMissingStub: _i5.Future<List<_i4.Symbol>?>.value(),
      ) as _i5.Future<List<_i4.Symbol>?>);

  @override
  _i5.Future<void> updateSymbol(
    _i4.Symbol? symbol,
    _i4.SymbolOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSymbol,
          [
            symbol,
            changes,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i4.LatLng?> getSymbolLatLng(_i4.Symbol? symbol) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSymbolLatLng,
          [symbol],
        ),
        returnValue: _i5.Future<_i4.LatLng?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.LatLng?>.value(),
      ) as _i5.Future<_i4.LatLng?>);

  @override
  _i5.Future<void> removeSymbol(_i4.Symbol? symbol) => (super.noSuchMethod(
        Invocation.method(
          #removeSymbol,
          [symbol],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeSymbols(Iterable<_i4.Symbol>? symbols) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeSymbols,
          [symbols],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearSymbols() => (super.noSuchMethod(
        Invocation.method(
          #clearSymbols,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i4.Line?> addLine(
    _i4.LineOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLine,
          [
            options,
            data,
          ],
        ),
        returnValue: _i5.Future<_i4.Line?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.Line?>.value(),
      ) as _i5.Future<_i4.Line?>);

  @override
  _i5.Future<List<_i4.Line>?> addLines(
    List<_i4.LineOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLines,
          [
            options,
            data,
          ],
        ),
        returnValue: _i5.Future<List<_i4.Line>?>.value(),
        returnValueForMissingStub: _i5.Future<List<_i4.Line>?>.value(),
      ) as _i5.Future<List<_i4.Line>?>);

  @override
  _i5.Future<void> updateLine(
    _i4.Line? line,
    _i4.LineOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLine,
          [
            line,
            changes,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i4.LatLng>?> getLineLatLngs(_i4.Line? line) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLineLatLngs,
          [line],
        ),
        returnValue: _i5.Future<List<_i4.LatLng>?>.value(),
        returnValueForMissingStub: _i5.Future<List<_i4.LatLng>?>.value(),
      ) as _i5.Future<List<_i4.LatLng>?>);

  @override
  _i5.Future<void> removeLine(_i4.Line? line) => (super.noSuchMethod(
        Invocation.method(
          #removeLine,
          [line],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeLines(Iterable<_i4.Line>? lines) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeLines,
          [lines],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearLines() => (super.noSuchMethod(
        Invocation.method(
          #clearLines,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i4.Circle?> addCircle(
    _i4.CircleOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircle,
          [
            options,
            data,
          ],
        ),
        returnValue: _i5.Future<_i4.Circle?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.Circle?>.value(),
      ) as _i5.Future<_i4.Circle?>);

  @override
  _i5.Future<List<_i4.Circle>?> addCircles(
    List<_i4.CircleOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircles,
          [
            options,
            data,
          ],
        ),
        returnValue: _i5.Future<List<_i4.Circle>?>.value(),
        returnValueForMissingStub: _i5.Future<List<_i4.Circle>?>.value(),
      ) as _i5.Future<List<_i4.Circle>?>);

  @override
  _i5.Future<void> updateCircle(
    _i4.Circle? circle,
    _i4.CircleOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCircle,
          [
            circle,
            changes,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i4.LatLng?> getCircleLatLng(_i4.Circle? circle) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCircleLatLng,
          [circle],
        ),
        returnValue: _i5.Future<_i4.LatLng?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.LatLng?>.value(),
      ) as _i5.Future<_i4.LatLng?>);

  @override
  _i5.Future<void> removeCircle(_i4.Circle? circle) => (super.noSuchMethod(
        Invocation.method(
          #removeCircle,
          [circle],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeCircles(Iterable<_i4.Circle>? circles) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeCircles,
          [circles],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearCircles() => (super.noSuchMethod(
        Invocation.method(
          #clearCircles,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i4.Fill?> addFill(
    _i4.FillOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFill,
          [
            options,
            data,
          ],
        ),
        returnValue: _i5.Future<_i4.Fill?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.Fill?>.value(),
      ) as _i5.Future<_i4.Fill?>);

  @override
  _i5.Future<List<_i4.Fill>?> addFills(
    List<_i4.FillOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFills,
          [
            options,
            data,
          ],
        ),
        returnValue: _i5.Future<List<_i4.Fill>?>.value(),
        returnValueForMissingStub: _i5.Future<List<_i4.Fill>?>.value(),
      ) as _i5.Future<List<_i4.Fill>?>);

  @override
  _i5.Future<void> updateFill(
    _i4.Fill? fill,
    _i4.FillOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFill,
          [
            fill,
            changes,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearFills() => (super.noSuchMethod(
        Invocation.method(
          #clearFills,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeFill(_i4.Fill? fill) => (super.noSuchMethod(
        Invocation.method(
          #removeFill,
          [fill],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeFills(Iterable<_i4.Fill>? fills) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFills,
          [fills],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<dynamic>?> queryRenderedFeatures(
    _i7.Point<double>? point,
    List<String>? layerIds,
    List<Object>? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryRenderedFeatures,
          [
            point,
            layerIds,
            filter,
          ],
        ),
        returnValue: _i5.Future<List<dynamic>?>.value(),
        returnValueForMissingStub: _i5.Future<List<dynamic>?>.value(),
      ) as _i5.Future<List<dynamic>?>);

  @override
  _i5.Future<List<dynamic>?> queryRenderedFeaturesInRect(
    _i8.Rect? rect,
    List<String>? layerIds,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryRenderedFeaturesInRect,
          [
            rect,
            layerIds,
            filter,
          ],
        ),
        returnValue: _i5.Future<List<dynamic>?>.value(),
        returnValueForMissingStub: _i5.Future<List<dynamic>?>.value(),
      ) as _i5.Future<List<dynamic>?>);

  @override
  _i5.Future<dynamic> invalidateAmbientCache() => (super.noSuchMethod(
        Invocation.method(
          #invalidateAmbientCache,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<_i4.LatLng?> requestMyLocationLatLng() => (super.noSuchMethod(
        Invocation.method(
          #requestMyLocationLatLng,
          [],
        ),
        returnValue: _i5.Future<_i4.LatLng?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.LatLng?>.value(),
      ) as _i5.Future<_i4.LatLng?>);

  @override
  _i5.Future<_i4.LatLngBounds?> getVisibleRegion() => (super.noSuchMethod(
        Invocation.method(
          #getVisibleRegion,
          [],
        ),
        returnValue: _i5.Future<_i4.LatLngBounds?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.LatLngBounds?>.value(),
      ) as _i5.Future<_i4.LatLngBounds?>);

  @override
  _i5.Future<void> setStyleString(String? styleString) => (super.noSuchMethod(
        Invocation.method(
          #setStyleString,
          [styleString],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addImage(
    String? name,
    _i9.Uint8List? bytes, [
    bool? sdf = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImage,
          [
            name,
            bytes,
            sdf,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setSymbolIconAllowOverlap(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolIconAllowOverlap,
          [enable],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setSymbolIconIgnorePlacement(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolIconIgnorePlacement,
          [enable],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setSymbolTextAllowOverlap(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolTextAllowOverlap,
          [enable],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setSymbolTextIgnorePlacement(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolTextIgnorePlacement,
          [enable],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addImageSource(
    String? imageSourceId,
    _i9.Uint8List? bytes,
    _i4.LatLngQuad? coordinates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageSource,
          [
            imageSourceId,
            bytes,
            coordinates,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateImageSource(
    String? imageSourceId,
    _i9.Uint8List? bytes,
    _i4.LatLngQuad? coordinates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateImageSource,
          [
            imageSourceId,
            bytes,
            coordinates,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeSource(String? sourceId) => (super.noSuchMethod(
        Invocation.method(
          #removeSource,
          [sourceId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addImageLayer(
    String? layerId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageLayer,
          [
            layerId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addImageLayerBelow(
    String? layerId,
    String? sourceId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageLayerBelow,
          [
            layerId,
            sourceId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeLayer(String? layerId) => (super.noSuchMethod(
        Invocation.method(
          #removeLayer,
          [layerId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setFilter(
    String? layerId,
    dynamic filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFilter,
          [
            layerId,
            filter,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setVisibility(
    String? layerId,
    bool? isVisible,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVisibility,
          [
            layerId,
            isVisible,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i7.Point<num>?> toScreenLocation(_i4.LatLng? latLng) =>
      (super.noSuchMethod(
        Invocation.method(
          #toScreenLocation,
          [latLng],
        ),
        returnValue: _i5.Future<_i7.Point<num>?>.value(),
        returnValueForMissingStub: _i5.Future<_i7.Point<num>?>.value(),
      ) as _i5.Future<_i7.Point<num>?>);

  @override
  _i5.Future<List<_i7.Point<num>>?> toScreenLocationBatch(
          Iterable<_i4.LatLng>? latLngs) =>
      (super.noSuchMethod(
        Invocation.method(
          #toScreenLocationBatch,
          [latLngs],
        ),
        returnValue: _i5.Future<List<_i7.Point<num>>?>.value(),
        returnValueForMissingStub: _i5.Future<List<_i7.Point<num>>?>.value(),
      ) as _i5.Future<List<_i7.Point<num>>?>);

  @override
  _i5.Future<_i4.LatLng?> toLatLng(_i7.Point<num>? screenLocation) =>
      (super.noSuchMethod(
        Invocation.method(
          #toLatLng,
          [screenLocation],
        ),
        returnValue: _i5.Future<_i4.LatLng?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.LatLng?>.value(),
      ) as _i5.Future<_i4.LatLng?>);

  @override
  _i5.Future<double?> getMetersPerPixelAtLatitude(double? latitude) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetersPerPixelAtLatitude,
          [latitude],
        ),
        returnValue: _i5.Future<double?>.value(),
        returnValueForMissingStub: _i5.Future<double?>.value(),
      ) as _i5.Future<double?>);

  @override
  _i5.Future<void> addSource(
    String? sourceid,
    _i4.SourceProperties? properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSource,
          [
            sourceid,
            properties,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addLayer(
    String? sourceId,
    String? layerId,
    _i4.LayerProperties? properties, {
    String? belowLayerId,
    bool? enableInteraction = true,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #enableInteraction: enableInteraction,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> takeSnapshot(_i4.SnapshotOptions? snapshotOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #takeSnapshot,
          [snapshotOptions],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<String?> findBelowLayerId(List<String>? belowAt) =>
      (super.noSuchMethod(
        Invocation.method(
          #findBelowLayerId,
          [belowAt],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IAssetManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAssetManager extends _i1.Mock implements _i10.IAssetManager {
  @override
  _i5.Future<_i9.Uint8List> load(String? key) => (super.noSuchMethod(
        Invocation.method(
          #load,
          [key],
        ),
        returnValue: _i5.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
        returnValueForMissingStub:
            _i5.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
      ) as _i5.Future<_i9.Uint8List>);
}

/// A class which mocks [NBNavigationPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockNBNavigationPlatform extends _i1.Mock
    implements _i2.NBNavigationPlatform {
  MockNBNavigationPlatform() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set navigationExitCallback(
          _i2.OnNavigationExitCallback? _navigationExitCallback) =>
      super.noSuchMethod(
        Invocation.setter(
          #navigationExitCallback,
          _navigationExitCallback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.DirectionsRouteResponse> fetchRoute(
          _i2.RouteRequestParams? routeRequestParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchRoute,
          [routeRequestParams],
        ),
        returnValue: _i5.Future<_i2.DirectionsRouteResponse>.value(
            _FakeDirectionsRouteResponse_0(
          this,
          Invocation.method(
            #fetchRoute,
            [routeRequestParams],
          ),
        )),
      ) as _i5.Future<_i2.DirectionsRouteResponse>);

  @override
  _i5.Future<void> startNavigation(
          _i2.NavigationLauncherConfig? launcherConfig) =>
      (super.noSuchMethod(
        Invocation.method(
          #startNavigation,
          [launcherConfig],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> startPreviewNavigation(_i2.DirectionsRoute? route) =>
      (super.noSuchMethod(
        Invocation.method(
          #startPreviewNavigation,
          [route],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> getRoutingBaseUri() => (super.noSuchMethod(
        Invocation.method(
          #getRoutingBaseUri,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getRoutingBaseUri,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> setRoutingBaseUri(String? baseUri) => (super.noSuchMethod(
        Invocation.method(
          #setRoutingBaseUri,
          [baseUri],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> findSelectedRouteIndex(
    _i4.LatLng? clickPoint,
    List<List<_i4.LatLng>>? coordinates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findSelectedRouteIndex,
          [
            clickPoint,
            coordinates,
          ],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<String> getFormattedDuration(num? durationSeconds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFormattedDuration,
          [durationSeconds],
        ),
        returnValue: _i5.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getFormattedDuration,
            [durationSeconds],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> setOnNavigationExitCallback(
          _i2.OnNavigationExitCallback? navigationExitCallback) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOnNavigationExitCallback,
          [navigationExitCallback],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i9.Uint8List?> captureRouteDurationSymbol(
    _i2.DirectionsRoute? route,
    bool? isPrimaryRoute,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #captureRouteDurationSymbol,
          [
            route,
            isPrimaryRoute,
          ],
        ),
        returnValue: _i5.Future<_i9.Uint8List?>.value(),
      ) as _i5.Future<_i9.Uint8List?>);

  @override
  _i5.Future<_i9.Uint8List?> captureRouteWaypoints(int? waypointIndex) =>
      (super.noSuchMethod(
        Invocation.method(
          #captureRouteWaypoints,
          [waypointIndex],
        ),
        returnValue: _i5.Future<_i9.Uint8List?>.value(),
      ) as _i5.Future<_i9.Uint8List?>);
}

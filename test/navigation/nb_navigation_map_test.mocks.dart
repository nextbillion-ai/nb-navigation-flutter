// Mocks generated by Mockito 5.4.4 from annotations
// in nb_navigation_flutter/test/navigation/nb_navigation_map_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:math' as _i3;
import 'dart:typed_data' as _i9;
import 'dart:ui' as _i8;

import 'package:flutter/painting.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:nb_maps_flutter/nb_maps_flutter.dart' as _i2;
import 'package:nb_navigation_flutter/navigation/nb_map_controller_wrapper.dart'
    as _i5;
import 'package:nb_navigation_flutter/nb_navigation_flutter.dart' as _i4;
import 'package:nb_navigation_flutter/util/asset_manager.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSymbol_0 extends _i1.SmartFake implements _i2.Symbol {
  _FakeSymbol_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLng_1 extends _i1.SmartFake implements _i2.LatLng {
  _FakeLatLng_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLine_2 extends _i1.SmartFake implements _i2.Line {
  _FakeLine_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCircle_3 extends _i1.SmartFake implements _i2.Circle {
  _FakeCircle_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFill_4 extends _i1.SmartFake implements _i2.Fill {
  _FakeFill_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLngBounds_5 extends _i1.SmartFake implements _i2.LatLngBounds {
  _FakeLatLngBounds_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePoint_6<T extends num> extends _i1.SmartFake
    implements _i3.Point<T> {
  _FakePoint_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDirectionsRouteResponse_7 extends _i1.SmartFake
    implements _i4.DirectionsRouteResponse {
  _FakeDirectionsRouteResponse_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MapController].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapController extends _i1.Mock implements _i5.MapController {
  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i2.OnFeatureInteractionCallback> get onFeatureTapped =>
      (super.noSuchMethod(
        Invocation.getter(#onFeatureTapped),
        returnValue: <_i2.OnFeatureInteractionCallback>[],
        returnValueForMissingStub: <_i2.OnFeatureInteractionCallback>[],
      ) as List<_i2.OnFeatureInteractionCallback>);

  @override
  void resizeWebMap() => super.noSuchMethod(
        Invocation.method(
          #resizeWebMap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void forceResizeWebMap() => super.noSuchMethod(
        Invocation.method(
          #forceResizeWebMap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<bool?> animateCamera(
    _i2.CameraUpdate? cameraUpdate, {
    Duration? duration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #animateCamera,
          [cameraUpdate],
          {#duration: duration},
        ),
        returnValue: _i6.Future<bool?>.value(),
        returnValueForMissingStub: _i6.Future<bool?>.value(),
      ) as _i6.Future<bool?>);

  @override
  _i6.Future<bool?> moveCamera(_i2.CameraUpdate? cameraUpdate) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveCamera,
          [cameraUpdate],
        ),
        returnValue: _i6.Future<bool?>.value(),
        returnValueForMissingStub: _i6.Future<bool?>.value(),
      ) as _i6.Future<bool?>);

  @override
  _i6.Future<void> addGeoJsonSource(
    String? sourceId,
    Map<String, dynamic>? geojson, {
    String? promoteId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGeoJsonSource,
          [
            sourceId,
            geojson,
          ],
          {#promoteId: promoteId},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setGeoJsonSource(
    String? sourceId,
    Map<String, dynamic>? geojson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGeoJsonSource,
          [
            sourceId,
            geojson,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setGeoJsonFeature(
    String? sourceId,
    Map<String, dynamic>? geojsonFeature,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGeoJsonFeature,
          [
            sourceId,
            geojsonFeature,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addSymbolLayer(
    String? sourceId,
    String? layerId,
    _i2.SymbolLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbolLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addLineLayer(
    String? sourceId,
    String? layerId,
    _i2.LineLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLineLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addFillLayer(
    String? sourceId,
    String? layerId,
    _i2.FillLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFillLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addFillExtrusionLayer(
    String? sourceId,
    String? layerId,
    _i2.FillExtrusionLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFillExtrusionLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addCircleLayer(
    String? sourceId,
    String? layerId,
    _i2.CircleLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircleLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addRasterLayer(
    String? sourceId,
    String? layerId,
    _i2.RasterLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRasterLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addHillshadeLayer(
    String? sourceId,
    String? layerId,
    _i2.HillshadeLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHillshadeLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addHeatmapLayer(
    String? sourceId,
    String? layerId,
    _i2.HeatmapLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHeatmapLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateMyLocationTrackingMode(
          _i2.MyLocationTrackingMode? myLocationTrackingMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMyLocationTrackingMode,
          [myLocationTrackingMode],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> matchMapLanguageWithDeviceDefault() => (super.noSuchMethod(
        Invocation.method(
          #matchMapLanguageWithDeviceDefault,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateContentInsets(
    _i7.EdgeInsets? insets, [
    bool? animated = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContentInsets,
          [
            insets,
            animated,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setMapLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setMapLanguage,
          [language],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setTelemetryEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setTelemetryEnabled,
          [enabled],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> getTelemetryEnabled() => (super.noSuchMethod(
        Invocation.method(
          #getTelemetryEnabled,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i2.Symbol> addSymbol(
    _i2.SymbolOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbol,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<_i2.Symbol>.value(_FakeSymbol_0(
          this,
          Invocation.method(
            #addSymbol,
            [
              options,
              data,
            ],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.Symbol>.value(_FakeSymbol_0(
          this,
          Invocation.method(
            #addSymbol,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Symbol>);

  @override
  _i6.Future<List<_i2.Symbol>> addSymbols(
    List<_i2.SymbolOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbols,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<List<_i2.Symbol>>.value(<_i2.Symbol>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i2.Symbol>>.value(<_i2.Symbol>[]),
      ) as _i6.Future<List<_i2.Symbol>>);

  @override
  _i6.Future<void> updateSymbol(
    _i2.Symbol? symbol,
    _i2.SymbolOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSymbol,
          [
            symbol,
            changes,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.LatLng> getSymbolLatLng(_i2.Symbol? symbol) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSymbolLatLng,
          [symbol],
        ),
        returnValue: _i6.Future<_i2.LatLng>.value(_FakeLatLng_1(
          this,
          Invocation.method(
            #getSymbolLatLng,
            [symbol],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.LatLng>.value(_FakeLatLng_1(
          this,
          Invocation.method(
            #getSymbolLatLng,
            [symbol],
          ),
        )),
      ) as _i6.Future<_i2.LatLng>);

  @override
  _i6.Future<void> removeSymbol(_i2.Symbol? symbol) => (super.noSuchMethod(
        Invocation.method(
          #removeSymbol,
          [symbol],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeSymbols(Iterable<_i2.Symbol>? symbols) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeSymbols,
          [symbols],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearSymbols() => (super.noSuchMethod(
        Invocation.method(
          #clearSymbols,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.Line> addLine(
    _i2.LineOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLine,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<_i2.Line>.value(_FakeLine_2(
          this,
          Invocation.method(
            #addLine,
            [
              options,
              data,
            ],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.Line>.value(_FakeLine_2(
          this,
          Invocation.method(
            #addLine,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Line>);

  @override
  _i6.Future<List<_i2.Line>> addLines(
    List<_i2.LineOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLines,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<List<_i2.Line>>.value(<_i2.Line>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i2.Line>>.value(<_i2.Line>[]),
      ) as _i6.Future<List<_i2.Line>>);

  @override
  _i6.Future<void> updateLine(
    _i2.Line? line,
    _i2.LineOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLine,
          [
            line,
            changes,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i2.LatLng>> getLineLatLngs(_i2.Line? line) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLineLatLngs,
          [line],
        ),
        returnValue: _i6.Future<List<_i2.LatLng>>.value(<_i2.LatLng>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i2.LatLng>>.value(<_i2.LatLng>[]),
      ) as _i6.Future<List<_i2.LatLng>>);

  @override
  _i6.Future<void> removeLine(_i2.Line? line) => (super.noSuchMethod(
        Invocation.method(
          #removeLine,
          [line],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeLines(Iterable<_i2.Line>? lines) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeLines,
          [lines],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearLines() => (super.noSuchMethod(
        Invocation.method(
          #clearLines,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.Circle> addCircle(
    _i2.CircleOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircle,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<_i2.Circle>.value(_FakeCircle_3(
          this,
          Invocation.method(
            #addCircle,
            [
              options,
              data,
            ],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.Circle>.value(_FakeCircle_3(
          this,
          Invocation.method(
            #addCircle,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Circle>);

  @override
  _i6.Future<List<_i2.Circle>> addCircles(
    List<_i2.CircleOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircles,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<List<_i2.Circle>>.value(<_i2.Circle>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i2.Circle>>.value(<_i2.Circle>[]),
      ) as _i6.Future<List<_i2.Circle>>);

  @override
  _i6.Future<void> updateCircle(
    _i2.Circle? circle,
    _i2.CircleOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCircle,
          [
            circle,
            changes,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.LatLng> getCircleLatLng(_i2.Circle? circle) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCircleLatLng,
          [circle],
        ),
        returnValue: _i6.Future<_i2.LatLng>.value(_FakeLatLng_1(
          this,
          Invocation.method(
            #getCircleLatLng,
            [circle],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.LatLng>.value(_FakeLatLng_1(
          this,
          Invocation.method(
            #getCircleLatLng,
            [circle],
          ),
        )),
      ) as _i6.Future<_i2.LatLng>);

  @override
  _i6.Future<void> removeCircle(_i2.Circle? circle) => (super.noSuchMethod(
        Invocation.method(
          #removeCircle,
          [circle],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeCircles(Iterable<_i2.Circle>? circles) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeCircles,
          [circles],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearCircles() => (super.noSuchMethod(
        Invocation.method(
          #clearCircles,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.Fill> addFill(
    _i2.FillOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFill,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<_i2.Fill>.value(_FakeFill_4(
          this,
          Invocation.method(
            #addFill,
            [
              options,
              data,
            ],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.Fill>.value(_FakeFill_4(
          this,
          Invocation.method(
            #addFill,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Fill>);

  @override
  _i6.Future<List<_i2.Fill>> addFills(
    List<_i2.FillOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFills,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<List<_i2.Fill>>.value(<_i2.Fill>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i2.Fill>>.value(<_i2.Fill>[]),
      ) as _i6.Future<List<_i2.Fill>>);

  @override
  _i6.Future<void> updateFill(
    _i2.Fill? fill,
    _i2.FillOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFill,
          [
            fill,
            changes,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearFills() => (super.noSuchMethod(
        Invocation.method(
          #clearFills,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeFill(_i2.Fill? fill) => (super.noSuchMethod(
        Invocation.method(
          #removeFill,
          [fill],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeFills(Iterable<_i2.Fill>? fills) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFills,
          [fills],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<dynamic>> queryRenderedFeatures(
    _i3.Point<double>? point,
    List<String>? layerIds,
    List<Object>? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryRenderedFeatures,
          [
            point,
            layerIds,
            filter,
          ],
        ),
        returnValue: _i6.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub: _i6.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i6.Future<List<dynamic>>);

  @override
  _i6.Future<List<dynamic>> queryRenderedFeaturesInRect(
    _i8.Rect? rect,
    List<String>? layerIds,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryRenderedFeaturesInRect,
          [
            rect,
            layerIds,
            filter,
          ],
        ),
        returnValue: _i6.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub: _i6.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i6.Future<List<dynamic>>);

  @override
  _i6.Future<dynamic> invalidateAmbientCache() => (super.noSuchMethod(
        Invocation.method(
          #invalidateAmbientCache,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
        returnValueForMissingStub: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<_i2.LatLng?> requestMyLocationLatLng() => (super.noSuchMethod(
        Invocation.method(
          #requestMyLocationLatLng,
          [],
        ),
        returnValue: _i6.Future<_i2.LatLng?>.value(),
        returnValueForMissingStub: _i6.Future<_i2.LatLng?>.value(),
      ) as _i6.Future<_i2.LatLng?>);

  @override
  _i6.Future<_i2.LatLngBounds> getVisibleRegion() => (super.noSuchMethod(
        Invocation.method(
          #getVisibleRegion,
          [],
        ),
        returnValue: _i6.Future<_i2.LatLngBounds>.value(_FakeLatLngBounds_5(
          this,
          Invocation.method(
            #getVisibleRegion,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.LatLngBounds>.value(_FakeLatLngBounds_5(
          this,
          Invocation.method(
            #getVisibleRegion,
            [],
          ),
        )),
      ) as _i6.Future<_i2.LatLngBounds>);

  @override
  _i6.Future<void> setStyleString(String? styleString) => (super.noSuchMethod(
        Invocation.method(
          #setStyleString,
          [styleString],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addImage(
    String? name,
    _i9.Uint8List? bytes, [
    bool? sdf = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImage,
          [
            name,
            bytes,
            sdf,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setSymbolIconAllowOverlap(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolIconAllowOverlap,
          [enable],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setSymbolIconIgnorePlacement(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolIconIgnorePlacement,
          [enable],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setSymbolTextAllowOverlap(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolTextAllowOverlap,
          [enable],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setSymbolTextIgnorePlacement(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolTextIgnorePlacement,
          [enable],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addImageSource(
    String? imageSourceId,
    _i9.Uint8List? bytes,
    _i2.LatLngQuad? coordinates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageSource,
          [
            imageSourceId,
            bytes,
            coordinates,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateImageSource(
    String? imageSourceId,
    _i9.Uint8List? bytes,
    _i2.LatLngQuad? coordinates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateImageSource,
          [
            imageSourceId,
            bytes,
            coordinates,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeSource(String? sourceId) => (super.noSuchMethod(
        Invocation.method(
          #removeSource,
          [sourceId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addImageLayer(
    String? layerId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageLayer,
          [
            layerId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addImageLayerBelow(
    String? layerId,
    String? sourceId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageLayerBelow,
          [
            layerId,
            sourceId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeLayer(String? layerId) => (super.noSuchMethod(
        Invocation.method(
          #removeLayer,
          [layerId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setFilter(
    String? layerId,
    dynamic filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFilter,
          [
            layerId,
            filter,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setVisibility(
    String? layerId,
    bool? isVisible,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVisibility,
          [
            layerId,
            isVisible,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.Point<num>> toScreenLocation(_i2.LatLng? latLng) =>
      (super.noSuchMethod(
        Invocation.method(
          #toScreenLocation,
          [latLng],
        ),
        returnValue: _i6.Future<_i3.Point<num>>.value(_FakePoint_6<num>(
          this,
          Invocation.method(
            #toScreenLocation,
            [latLng],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Point<num>>.value(_FakePoint_6<num>(
          this,
          Invocation.method(
            #toScreenLocation,
            [latLng],
          ),
        )),
      ) as _i6.Future<_i3.Point<num>>);

  @override
  _i6.Future<List<_i3.Point<num>>> toScreenLocationBatch(
          Iterable<_i2.LatLng>? latLngs) =>
      (super.noSuchMethod(
        Invocation.method(
          #toScreenLocationBatch,
          [latLngs],
        ),
        returnValue: _i6.Future<List<_i3.Point<num>>>.value(<_i3.Point<num>>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i3.Point<num>>>.value(<_i3.Point<num>>[]),
      ) as _i6.Future<List<_i3.Point<num>>>);

  @override
  _i6.Future<_i2.LatLng> toLatLng(_i3.Point<num>? screenLocation) =>
      (super.noSuchMethod(
        Invocation.method(
          #toLatLng,
          [screenLocation],
        ),
        returnValue: _i6.Future<_i2.LatLng>.value(_FakeLatLng_1(
          this,
          Invocation.method(
            #toLatLng,
            [screenLocation],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i2.LatLng>.value(_FakeLatLng_1(
          this,
          Invocation.method(
            #toLatLng,
            [screenLocation],
          ),
        )),
      ) as _i6.Future<_i2.LatLng>);

  @override
  _i6.Future<double> getMetersPerPixelAtLatitude(double? latitude) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetersPerPixelAtLatitude,
          [latitude],
        ),
        returnValue: _i6.Future<double>.value(0.0),
        returnValueForMissingStub: _i6.Future<double>.value(0.0),
      ) as _i6.Future<double>);

  @override
  _i6.Future<void> addSource(
    String? sourceid,
    _i2.SourceProperties? properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSource,
          [
            sourceid,
            properties,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addLayer(
    String? sourceId,
    String? layerId,
    _i2.LayerProperties? properties, {
    String? belowLayerId,
    bool? enableInteraction = true,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #enableInteraction: enableInteraction,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String> takeSnapshot(_i2.SnapshotOptions? snapshotOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #takeSnapshot,
          [snapshotOptions],
        ),
        returnValue: _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #takeSnapshot,
            [snapshotOptions],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #takeSnapshot,
            [snapshotOptions],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<String> findBelowLayerId(List<String>? belowAt) =>
      (super.noSuchMethod(
        Invocation.method(
          #findBelowLayerId,
          [belowAt],
        ),
        returnValue: _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #findBelowLayerId,
            [belowAt],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #findBelowLayerId,
            [belowAt],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IAssetManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAssetManager extends _i1.Mock implements _i11.IAssetManager {
  @override
  _i6.Future<_i9.Uint8List> load(String? key) => (super.noSuchMethod(
        Invocation.method(
          #load,
          [key],
        ),
        returnValue: _i6.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
        returnValueForMissingStub:
            _i6.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
      ) as _i6.Future<_i9.Uint8List>);
}

/// A class which mocks [NBNavigationPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockNBNavigationPlatform extends _i1.Mock
    implements _i4.NBNavigationPlatform {
  MockNBNavigationPlatform() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set navigationExitCallback(
          _i4.OnNavigationExitCallback? _navigationExitCallback) =>
      super.noSuchMethod(
        Invocation.setter(
          #navigationExitCallback,
          _navigationExitCallback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i4.DirectionsRouteResponse> fetchRoute(
          _i4.RouteRequestParams? routeRequestParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchRoute,
          [routeRequestParams],
        ),
        returnValue: _i6.Future<_i4.DirectionsRouteResponse>.value(
            _FakeDirectionsRouteResponse_7(
          this,
          Invocation.method(
            #fetchRoute,
            [routeRequestParams],
          ),
        )),
      ) as _i6.Future<_i4.DirectionsRouteResponse>);

  @override
  _i6.Future<void> startNavigation(
          _i4.NavigationLauncherConfig? launcherConfig) =>
      (super.noSuchMethod(
        Invocation.method(
          #startNavigation,
          [launcherConfig],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> startPreviewNavigation(_i4.DirectionsRoute? route) =>
      (super.noSuchMethod(
        Invocation.method(
          #startPreviewNavigation,
          [route],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String> getRoutingBaseUri() => (super.noSuchMethod(
        Invocation.method(
          #getRoutingBaseUri,
          [],
        ),
        returnValue: _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getRoutingBaseUri,
            [],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<void> setRoutingBaseUri(String? baseUri) => (super.noSuchMethod(
        Invocation.method(
          #setRoutingBaseUri,
          [baseUri],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<int> findSelectedRouteIndex(
    _i2.LatLng? clickPoint,
    List<List<_i2.LatLng>>? coordinates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findSelectedRouteIndex,
          [
            clickPoint,
            coordinates,
          ],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<String> getFormattedDuration(num? durationSeconds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFormattedDuration,
          [durationSeconds],
        ),
        returnValue: _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getFormattedDuration,
            [durationSeconds],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<void> setOnNavigationExitCallback(
          _i4.OnNavigationExitCallback? navigationExitCallback) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOnNavigationExitCallback,
          [navigationExitCallback],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i9.Uint8List?> captureRouteDurationSymbol(
    _i4.DirectionsRoute? route,
    bool? isPrimaryRoute,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #captureRouteDurationSymbol,
          [
            route,
            isPrimaryRoute,
          ],
        ),
        returnValue: _i6.Future<_i9.Uint8List?>.value(),
      ) as _i6.Future<_i9.Uint8List?>);

  @override
  _i6.Future<_i9.Uint8List?> captureRouteWaypoints(int? waypointIndex) =>
      (super.noSuchMethod(
        Invocation.method(
          #captureRouteWaypoints,
          [waypointIndex],
        ),
        returnValue: _i6.Future<_i9.Uint8List?>.value(),
      ) as _i6.Future<_i9.Uint8List?>);
}
